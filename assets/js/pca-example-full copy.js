function createAxisLabel(e,t,n,r){var a=r.multiplyScalar(n),i=new TextGeometry(t,{font:e,size:size,depth:depth}),o=new THREE.Mesh(i);return o.name=t,o.geometry.translate(a.x,a.y,a.z),o}function createAxes(e){return new BidirectionalAxesHelper(e)}function drawLabeledAxes(e,t){var n,r,a,i=new THREE.Vector3(1,0,0),o=new THREE.Vector3(0,1,0),s=new THREE.Vector3(0,0,1);n=createAxisLabel(e,"x-axis",t,i),r=createAxisLabel(e,"y-axis",t,o),a=createAxisLabel(e,"z-axis",t,s),scene.add(n),scene.add(r),scene.add(a)}function faceAxesLabels(){xLabel=createAxisLabel(font,"x-axis",sampleSpread,xVec),yLabel=createAxisLabel(font,"y-axis",sampleSpread,yVec),zLabel=createAxisLabel(font,"z-axis",sampleSpread,zVec);const e=["x-axis","y-axis","z-axis"];for(i=0;i<e.length;i++){scene.getObjectByName("x-axis").lookAt(camera.position)}}function animate(){controls.update(),renderer.render(scene,camera),requestAnimationFrame(animate)}function addCholeskyPoints(e,t,n){const r=generateSamplesCholesky(e,t,n),a=[];var o=5,s=5,d=5,c=0,l=0,E=0;for(i=0;i<r.length;i++)o=r[i][0]>o?r[i][0]:o,s=r[i][1]>s?r[i][1]:s,d=r[i][2]>d?r[i][2]:d,c=r[i][0]<c?r[i][0]:c,l=r[i][1]<l?r[i][1]:l,E=r[i][2]<E?r[i][2]:E,a.push(r[i][0],r[i][1],r[i][2]);const w=new THREE.BufferGeometry;w.setAttribute("position",new THREE.Float32BufferAttribute(a,3));const m=(new THREE.TextureLoader).load("/assets/img/textures/sprites/disc.png"),p=50,x=new THREE.PointsMaterial({size:p,sizeAttenuation:!0,map:m,alphaTest:.5,transparent:!0,color:8947848}),u=new THREE.Points(w,x);return scene.add(u),[[c,l,E],[o,s,d]]}function drawAxesLabels(e){drawLabel("-x",[e[0][0],0,0]),drawLabel("-y",[0,e[0][1],0]),drawLabel("-z",[0,0,e[0][2]]),drawLabel("x",[e[1][0],0,0]),drawLabel("y",[0,e[1][1],0]),drawLabel("z",[0,0,e[1][2]])}function addUniformPoints(e,t){const n=[];for(let r=0;r<e;r++){const e=THREE.MathUtils.randFloatSpread(t)+t/2,r=THREE.MathUtils.randFloatSpread(t)+t/2,a=THREE.MathUtils.randFloatSpread(t)+t/2;n.push(e,r,a)}const r=new THREE.BufferGeometry;r.setAttribute("position",new THREE.Float32BufferAttribute(n,3));const a=new THREE.PointsMaterial({color:8947848}),i=new THREE.Points(r,a);scene.add(i)}function add3DBox(e,t,n){const r=new THREE.BoxGeometry(e,t,n),a=new THREE.MeshNormalMaterial,i=new THREE.Mesh(r,a);scene.add(i)}function drawLine(){const e=new THREE.BufferGeometry,t=new Float32Array([0,0,0,20,10,0,40,-10,0,60,0,0]);e.setAttribute("position",new THREE.BufferAttribute(t,3));const n=new Float32Array([1,0,0,1,1,0,0,1,1,0,0,1]);e.setAttribute("color",new THREE.BufferAttribute(n,3));const r=new THREE.LineBasicMaterial({vertexColors:!0,linewidth:4}),a=new THREE.Line(e,r);a.computeLineDistances(),scene.add(a)}function drawLabel(e,t){const n=document.createElement("canvas"),r=n.getContext("2d"),a=e,i=60;r.font=`${i}px Arial`,r.fillStyle="white";const o=r.measureText(a);n.width=o.width,n.height=2*i,r.font=`${i}px Arial`,r.fillStyle="white",r.fillText(a,0,i);const s=new THREE.Texture(n);s.minFilter=THREE.LinearFilter,s.needsUpdate=!0;const d=new THREE.SpriteMaterial({map:s}),c=new THREE.Sprite(d);c.position.set(t[0],t[1],t[2]),scene.add(c)}import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls";import{TextGeometry}from"three/addons/geometries/TextGeometry.js";import{FontLoader}from"three/addons/loaders/FontLoader.js";class BidirectionalAxesHelper extends THREE.LineSegments{constructor(e){const t=[e[0][0],0,0,e[1][0],0,0,0,e[0][1],0,0,e[1][1],0,0,0,e[0][2],0,0,e[1][2]],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new THREE.BufferGeometry;r.setAttribute("position",new THREE.Float32BufferAttribute(t,3)),r.setAttribute("color",new THREE.Float32BufferAttribute(n,3));super(r,new THREE.LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}var data=[[40,50,60],[50,70,60],[80,70,90],[50,60,80]];let matrix=[[4,12,-16],[12,37,-43],[-16,-43,98]];window.addEventListener("resize",(()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}));var vectors=PCA.getEigenVectors(data),foo=math.round(math.e,3);const depth=20,size=70,scene=new THREE.Scene;var sampleSize=10,sampleSpread=100,meanVector=[0,0,0],covarianceMatrix=[[40,12,120.9],[22,30,0],[-18.9,0,45]];const minMaxarray=addCholeskyPoints(covarianceMatrix,sampleSize,meanVector);drawLine(),scene.add(createAxes(minMaxarray)),drawAxesLabels(minMaxarray);const camera=new THREE.PerspectiveCamera(90,window.innerWidth/window.innerHeight,1,1e4);camera.position.x=0,camera.position.y=0,camera.position.z=0;const renderer=new THREE.WebGLRenderer;renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement);const controls=new OrbitControls(camera,renderer.domElement);controls.enableDamping=!0,controls.dampingFactor=.05,animate();